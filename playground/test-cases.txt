#TITLE Valid JSON baseline
#EXPECT {"name":"John","age":30,"address":{"street":"123 Main St","city":"Boston"},"hobbies":["reading","gaming"]}
{
  "name": "John",
  "age": 30,
  "address": {
    "street": "123 Main St",
    "city": "Boston"
  },
  "hobbies": ["reading", "gaming"]
}

---

#TITLE Multiple trailing commas everywhere
#EXPECT {"a":1,"b":[1,2,3],"c":{"d":4}}
{
  a: 1,,,,
  b: [1,2,3,,,,],,,
  c: {
    d: 4,,,,
  },,,
}

---

#TITLE Missing closing brackets with nested structures
#EXPECT {"a":{"b":{"c":[1,2,3]}}}
{
  a: {
    b: {
      c: [1,2,3

---

#TITLE Mixed quote styles and no quotes
#EXPECT {"single_quoted":"value","double_quoted":"another","no_quotes":"test","mixed":"quotes"}
{
  single_quoted: 'value',
  "double_quoted": "another",
  no_quotes: test,
  'mixed': "quotes"
}

---

#TITLE Random whitespace and newlines
#EXPECT {"key":"value","array":[1,2,3]}
{key:    
         "value",
  array     :     [    1,
    
    2,     3   ]}

---

#TITLE Comments in impossible places
#EXPECT {"key":"val//ue","nested":{"deep":"//comment"},"array":[1,"//",2]}
{
  key: "val//ue", // comment in value
  nested: {/* comment inside */ "deep": "//comment"},
  array: [1, // comment in array
          "//", 2]
}

---

#DISABLE
#TITLE Unicode and special characters in keys
#EXPECT {"ðŸš€":"rocket","$pecial":"value","@mention":"test","snake_case":"underscore","kebab-case":"hyphen"}
{
  ðŸš€: "rocket",
  $pecial: "value",
  @mention: "test",
  snake_case: "underscore",
  kebab-case: "hyphen"
}

---

#TITLE Nested arrays with mixed content
#EXPECT {"data":[[1,2,[3,4,["nested"],5],6],{"mix":"types"},[null,true,false]]}
{
  data: [
    [1,2,[3,4,["nested"],5],6],
    {mix: "types"},
    [null,true,false]
  ]
}

---

#TITLE HTML-like content in values
#EXPECT {"html":"<div>content</div>","script":"<script>alert('test')</script>"}
{
  html: "<div>content</div>",
  script: "<script>alert('test')</script>"
}

---

#TITLE Extremely deep nesting
#EXPECT {"level1":{"level2":{"level3":{"level4":{"level5":{"level6":{"value":42}}}}}}}
{
  level1: {
    level2: {
      level3: {
        level4: {
          level5: {
            level6: {value: 42

---

#DISABLE
#TITLE Mixed array notations
#EXPECT {"array":[1,2,3],"sparse":[null,null,3]}
{
  array: [1,2,3],
  sparse: [,,3]
}

---

#TITLE Escaped characters in strings
#EXPECT {"escaped":"\"quoted\" and \\backslash\\","newlines":"line1\nline2"}
{
  escaped: "\"quoted\" and \\backslash\\",
  newlines: "line1\nline2"
}

---

#TITLE Comments with JSON-like content
#EXPECT {"key":"value"}
{
  key: "value" // {"this":"is","a":"comment"}
  /* {
    "this": "is",
    "a": "multi-line",
    "comment": true
  } */
}

---

#TITLE Invalid but recoverable number formats
#EXPECT {"numbers":[1,2.5,-3.14,42]}
{
  numbers: [
    1.0.0,
    2.5.0,
    -3.14.15,
    42e
  ]
}

---

#TITLE Multiple objects in string
#EXPECT {"first":"value"}
{
  "first": "value"
}
{
  "second": "should be ignored"
}

---

#TITLE Garbage around valid JSON
#EXPECT {"key":"value"}
Hello this is some text
{
  key: "value"
}
And some more text here

---

#TITLE Empty object with comments
#EXPECT {}
{
  // Empty object
  /* With some
     comments */
}

---

#TITLE Missing colons and commas
#EXPECT {"a":"1","b":"2","c":"3"}
{
  a "1"
  b "2",
  c: "3"
}

---

#TITLE Mixed valid and invalid values
#EXPECT {"valid":true,"number":42,"text":"string"}
{
  valid: true,
  number: 42e10e,
  text: string value without quotes
}